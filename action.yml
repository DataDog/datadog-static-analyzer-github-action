name: "Datadog Static Analysis"
description: "Run a Datadog Static Analysis in your Github Action workflows"
author: "Datadog"
inputs:
  dd_api_key:
    description: "Your Datadog API key used to authenticate requests."
    required: true
    default: ""
  dd_app_key:
    description: "Your Datadog Application key used to authenticate requests."
    required: true
    default: ""
  dd_service:
    description: "The service you want your results tagged with."
    required: true
    default: ""
  dd_env:
    description: "The environment you want your results tagged with."
    required: false
    default: "none"
  dd_site:
    description: "The Datadog site. For example, users in the EU may want to set datadoghq.eu."
    required: false
    default: "datadoghq.com"
  cpu_count:
    description: "Set the number of CPUs used to by the analyzer."
    required: false
    default: "2"
  enable_performance_statistics:
    description: "Get the execution time statistics for analyzed files."
    required: false
    default: "false"
  debug:
    description: "Lets the analyzer print additional logs useful for debugging."
    required: false
    default: "no"
  sca_enabled:
    description: "Enable Software Composition Analysis (SCA) - DEPRECATED"
    required: false
    default: "false"
  subdirectory:
    description: 'A subdirectory pattern or glob (or space-delimited subdirectory patterns) that the analysis should be limited to. For example: "src" or "src packages".'
    required: false
    default: ""
  architecture:
    description: "The architecture of the image to use. Can be x86_64 or aarch64."
    required: false
    default: "x86_64"
  diff_aware:
    description: "Enable diff aware scanning mode."
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Process Inputs
      id: process_inputs
      shell: bash
      run: |
        OUTPUT_DIRECTORY=$(mktemp -d)
        OUTPUT_FILE=$OUTPUT_DIRECTORY/output.sarif
        echo "output_file=$OUTPUT_FILE" >> $GITHUB_ENV
        if [ -n "${{ inputs.subdirectory}}" ]; then
          for subdirectory in ${{ inputs.subdirectory }}; do
            SUBDIRECTORY_OPTION="$SUBDIRECTORY_OPTION --subdirectory $subdirectory"
          done
        else
          SUBDIRECTORY_OPTION=""
        fi
        echo "subdirectory_option=$SUBDIRECTORY_OPTION" >> $GITHUB_ENV
        if [ "${{ inputs.enable_performance_statistics }}" == "true" ]; then
          PERFORMANCE_STATISTICS="--performance-statistics"
        else
          PERFORMANCE_STATISTICS=""
        fi
        echo "performance_statistics=$PERFORMANCE_STATISTICS" >> $GITHUB_ENV
        if [ "${{ inputs.debug }}" == "yes" ]; then
          DEBUG="--debug yes"
        else
          DEBUG=""
        fi
        echo "debug=$DEBUG" >> $GITHUB_ENV
        if [ "${{ inputs.diff_aware }}" == "true" ]; then
          DIFF_AWARE="--diff-aware"
        else
          DIFF_AWARE=""
        fi
        echo "perf=$PERFORMANCE_STATISTICS"
        echo "debug=$DEBUG"
        echo "diff_aware=$DIFF_AWARE"
        echo "output_file=$OUTPUT_FILE"
        echo "subdirectory_option=$SUBDIRECTORY_OPTION"
        echo "gh_workspace=$GITHUB_WORKSPACE"
    - uses: docker://ghcr.io/amaanq/datadog-static-analyzer:main
      env:
        DD_API_KEY: ${{ inputs.dd_api_key }}
        DD_APP_KEY: ${{ inputs.dd_app_key }}
        DD_SERVICE: ${{ inputs.dd_service }}
        DD_ENV: ${{ inputs.dd_env }}
        DD_SITE: ${{ inputs.dd_site }}
      with:
        args: >-
          -i $GITHUB_WORKSPACE
          -g
          -o ${{ steps.process_inputs.outputs.output_file }}
          -f sarif
          --cpus ${{ inputs.cpu_count }}
          ${{ steps.process_inputs.outputs.performance_statistics }}
          ${{ steps.process_inputs.outputs.debug }}
          ${{ steps.process_inputs.outputs.subdirectory_option }}
          ${{ steps.process_inputs.outputs.diff_aware }}
